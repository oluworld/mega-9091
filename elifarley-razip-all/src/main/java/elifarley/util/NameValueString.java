/* NameValueString -- Deals with name - value pairs.Portions of this software are Copyright (c) 2001, Elifarley Callado Coelho -http://www.geocities.com/elifarley/LicenseRedistribution and use in source and binary forms,with or without modification, are permitted provided thatthe following conditions are met:*	Redistributions of source code must retain the abovecopyright notice, this list of conditions and the followingdisclaimer. *	Redistributions in binary form must reproduce the abovecopyright notice, this list of conditions and the followingdisclaimer in the documentation, about box and/or othermaterials provided with the distribution. *	No personal names or organizations names associatedwith the Indy project may be used to endorse or promoteproducts derived from this software without specific priorwritten permission of the specific individual ororganization. THIS SOFTWARE IS PROVIDED BY ITS AUTHOR (ELIFARLEY CALLADO COELHO) "AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */package elifarley.util;import java.util.Vector;public class NameValueString {    protected int index = -1;    protected char sep = '=';    protected String ps;    public NameValueString(String s, char sep) {        update(s, sep);    }    public NameValueString(String s) {        update(s);    }    public NameValueString(String name, String value) {        update(name + sep + value);    }    public NameValueString(String name, String value, char sep) {        this.sep = sep;        update(name + sep + value);    }    public void setSep(char sep) {        update(sep);    }    public char getSep() {        return sep;    }    public void update(String s) {        this.ps = new String(s);        index = ps.indexOf(sep, 0);    }    public void update(char sep) {        this.sep = sep;        index = ps.indexOf(this.sep, 0);    }    public void update(String s, char sep) {        this.sep = sep;        this.ps = new String(s);        index = ps.indexOf(this.sep, 0);    }    public String name() {        if (ps != null && index >= 0) {            return ps.substring(0, index).trim();        } else {            return new String("");        }    }    public NameValueString value() {        if (ps != null) {            if (index >= 0) {                return new NameValueString(ps.substring(index + 1).trim());            } else {                return new NameValueString(ps.trim());            }        } else {            return new NameValueString("");        }    }    public StringListVector split(char sep) {        return StringUtil.split(ps, sep);    }    public String toString() {        return ps.trim();    }}