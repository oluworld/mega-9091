/* ZipConstants -- Constants used by ZipFS. * Copyright (C) 2001 Elifarley Callado Coelho  * This program is free software; you can redistribute it and/or * modify it under the terms of the GNU General Public License, version 2, * as published by the Free Software Foundation; * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. * See the file "COPYING" for the software license.  * The constants were copied from http://www.pkware.com/appnote.txt  * Elifarley Callado Coelho * Belo Horizonte, Brazil * elifarley@yahoo.com * http://www.geocities.com/elifarley/ *  */ /*  Overall .ZIP file format:    [local file header 1]    [file data 1]    [data descriptor 1]    .     .    .    [local file header n]    [file data n]    [data descriptor n]    [central directory]   A.  Local file header:        local file header signature     4 bytes  (0x04034b50)        version needed to extract       2 bytes        general purpose bit flag        2 bytes        compression method              2 bytes        last mod file time              2 bytes        last mod file date              2 bytes        crc-32                          4 bytes        compressed size                 4 bytes        uncompressed size               4 bytes        filename length                 2 bytes        extra field length              2 bytes        filename (variable size)        extra field (variable size)  B.  File data      Immediately following the local header for a file      is the compressed or stored data for the file.       The series of [local file header][file data][data      descriptor] repeats for each file in the .ZIP archive.   C.  Data descriptor:        crc-32                          4 bytes        compressed size                 4 bytes        uncompressed size               4 bytes      This descriptor exists only if bit 3 of the general      purpose bit flag is set (see below).  It is byte aligned      and immediately follows the last byte of compressed data.      This descriptor is used only when it was not possible to      seek in the output .ZIP file, e.g., when the output .ZIP file      was standard output or a non seekable device.  D.  Central directory structure:      [file header 1]      .      .      .       [file header n]      [digital signature]       [end of central directory record]      File header:        central file header signature   4 bytes  (0x02014b50)        version made by                 2 bytes        version needed to extract       2 bytes        general purpose bit flag        2 bytes        compression method              2 bytes        last mod file time              2 bytes        last mod file date              2 bytes        crc-32                          4 bytes        compressed size                 4 bytes        uncompressed size               4 bytes        filename length                 2 bytes        extra field length              2 bytes        file comment length             2 bytes        disk number start               2 bytes        internal file attributes        2 bytes        external file attributes        4 bytes        relative offset of local header 4 bytes        filename (variable size)        extra field (variable size)        file comment (variable size)      Digital signature:        header signature                4 bytes  (0x05054b50)        size of data                    2 bytes        signature data (variable size)              End of central directory record:        end of central dir signature    4 bytes  (0x06054b50)        number of this disk             2 bytes        number of the disk with the        start of the central directory  2 bytes        total number of entries in        the central dir on this disk    2 bytes        total number of entries in        the central dir                 2 bytes        size of the central directory   4 bytes        offset of start of central        directory with respect to        the starting disk number        4 bytes        .ZIP file comment length        2 bytes        .ZIP file comment       (variable size)*/package elifarley.io.fs.zip;interface ZipConstants {		// Zip signatures    static final long LFH_SIG 		= 0x04034b50; // Local file header signature    static final long SPANNING_SIG 	= 0x08074b50;     static final long CFH_SIG 		= 0x02014b50; // Central file header signature    static final long DS_SIG 		= 0x05054b50; // Digital signature signature    static final long ECD_SIG 		= 0x06054b50; // end of central dir signature    // Record sizes    static final int LFH_SIZE 	= 30;    static final int SH_SIZE 	= 16;    static final int CFH_SIZE 	= 46;    static final int DS_SIZE 	= 6;    static final int ECD_SIZE 	= 22;    // Local file header field offsets    static final int LFH_OFF_VNE 	= 4;	// version needed to extract    static final int LFH_OFF_GPBF 	= 6;	// general purpose bit flag    static final int LFH_OFF_CM 	= 8;	// compression method    static final int LFH_OFF_MT 	= 10;	// modification time    static final int LFH_OFF_UCRC32 = 14;	// uncompressed file crc-32 value    static final int LFH_OFF_CSIZE 	= 18;	// compressed size    static final int LFH_OFF_USIZE 	= 22;	// uncompressed size    static final int LFH_OFF_FNL 	= 26;	// filename length    static final int LFH_OFF_EFL 	= 28;	// extra field length    // Data descriptor field offsets    static final int DD_OFF_UCRC32 	= 0;	// uncompressed file crc-32 value    static final int DD_OFF_CSIZE 	= 4;	// compressed size    static final int DD_OFF_USIZE 	= 8;	// uncompressed size    //  Central directory file header field offsets    static final int CDFH_OFF_VMB 		= 4;	// version made by    static final int CDFH_OFF_VNE 		= 6;	// version needed to extract    static final int CDFH_OFF_EDF 		= 8;	// encrypt, decrypt flags    static final int CDFH_OFF_CM 		= 10;	// compression method    static final int CDFH_OFF_MD 		= 12;	// modification time    static final int CDFH_OFF_UCRC32 	= 16;	// uncompressed file crc-32 value    static final int CDFH_OFF_CSIZE 	= 20;	// compressed size    static final int CDFH_OFF_USIZE 	= 24;	// uncompressed size    static final int CDFH_OFF_FNL 		= 28;	// filename length    static final int CDFH_OFF_EFL 		= 30;	// extra field length    static final int CDFH_OFF_CL 		= 32;	// comment length    static final int CDFH_OFF_DNS 		= 34;	// disk number start    static final int CDFH_OFF_IFA 		= 36;	// internal file attributes    static final int CDFH_OFF_EFA 		= 38;	// external file attributes    static final int CDFH_OFF_ROLH 		= 42;	// relative offset of local header    // Digital Signature field offsets    static final int DS_OFF_DSIZE 	= 4;	// size of data    static final int DS_SD 			= 6;	// signature data    //End of central directory field offsets    static final int ECD_OFF_NTD 	= 4;	// number of this disk    static final int ECD_OFF_NDSCD 	= 6;	// number of the disk with the start of the central directory    static final int ECD_OFF_TNETD 	= 8;	// total number of entries in the central dir on this disk    static final int ECD_OFF_TNE 	= 10;	// total number of entries in central dir    static final int ECD_OFF_CDS 	= 12;	// size of the central directory    static final int ECD_OFF_OSCD 	= 16;	// offset of start of central directory with respect to the starting disk number    static final int ECD_OFF_ZFCL 	= 20;	// .ZIP file comment length    }