package tripleo.linuxtuples.gen;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.21
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class tuples implements tuplesConstants {
  public static SWIGTYPE_p_timeval new_timeval() {
    long cPtr = tuplesJNI.new_timeval();
    return (cPtr == 0) ? null : new SWIGTYPE_p_timeval(cPtr, false);
  }

  public static void delete_timeval(SWIGTYPE_p_timeval t) {
    tuplesJNI.delete_timeval(SWIGTYPE_p_timeval.getCPtr(t));
  }

  public static int gettimeofday(SWIGTYPE_p_timeval __tv, SWIGTYPE_p___timezone_ptr_t __tz) {
    return tuplesJNI.gettimeofday(SWIGTYPE_p_timeval.getCPtr(__tv), SWIGTYPE_p___timezone_ptr_t.getCPtr(__tz));
  }

  public static double GET_TIMEVAL_DIFF(SWIGTYPE_p_timeval before, SWIGTYPE_p_timeval after) {
    return tuplesJNI.GET_TIMEVAL_DIFF(SWIGTYPE_p_timeval.getCPtr(before), SWIGTYPE_p_timeval.getCPtr(after));
  }

  public static void setI_am_server(int value) {
    tuplesJNI.set_i_am_server(value);
  }

  public static int getI_am_server() {
    return tuplesJNI.get_i_am_server();
  }

  public static void setLogbuf(String value) {
    tuplesJNI.set_logbuf(value);
  }

  public static String getLogbuf() {
    return tuplesJNI.get_logbuf();
  }

  public static void setLogptr(int value) {
    tuplesJNI.set_logptr(value);
  }

  public static int getLogptr() {
    return tuplesJNI.get_logptr();
  }

  public static int get_server_portnumber(context ctx) {
    return tuplesJNI.get_server_portnumber(context.getCPtr(ctx));
  }

  public static void print_element(element e) {
    tuplesJNI.print_element(element.getCPtr(e));
  }

  public static void print_tuple(tuple s) {
    tuplesJNI.print_tuple(tuple.getCPtr(s));
  }

  public static void destroy_tuple(tuple t) {
    tuplesJNI.destroy_tuple(tuple.getCPtr(t));
  }

  public static int tuples_match(tuple s, tuple t) {
    return tuplesJNI.tuples_match(tuple.getCPtr(s), tuple.getCPtr(t));
  }

  public static long random_int() {
    return tuplesJNI.random_int();
  }

  public static int send_chunk(context ctx, String buf, int bytes_to_send) {
    return tuplesJNI.send_chunk(context.getCPtr(ctx), buf, bytes_to_send);
  }

  public static int send_tuple(context ctx, tuple t) {
    return tuplesJNI.send_tuple(context.getCPtr(ctx), tuple.getCPtr(t));
  }

  public static int recv_chunk(context ctx, String buf, int size) {
    return tuplesJNI.recv_chunk(context.getCPtr(ctx), buf, size);
  }

  public static tuple recv_tuple(context ctx) {
    long cPtr = tuplesJNI.recv_tuple(context.getCPtr(ctx));
    return (cPtr == 0) ? null : new tuple(cPtr, false);
  }

  public static int put_tuple(tuple s, context ctx) {
    return tuplesJNI.put_tuple(tuple.getCPtr(s), context.getCPtr(ctx));
  }

  public static tuple get_tuple(tuple s, context ctx) {
    long cPtr = tuplesJNI.get_tuple(tuple.getCPtr(s), context.getCPtr(ctx));
    return (cPtr == 0) ? null : new tuple(cPtr, false);
  }

  public static tuple read_tuple(tuple s, context ctx) {
    long cPtr = tuplesJNI.read_tuple(tuple.getCPtr(s), context.getCPtr(ctx));
    return (cPtr == 0) ? null : new tuple(cPtr, false);
  }

  public static tuple get_nb_tuple(tuple s, context ctx) {
    long cPtr = tuplesJNI.get_nb_tuple(tuple.getCPtr(s), context.getCPtr(ctx));
    return (cPtr == 0) ? null : new tuple(cPtr, false);
  }

  public static tuple read_nb_tuple(tuple s, context ctx) {
    long cPtr = tuplesJNI.read_nb_tuple(tuple.getCPtr(s), context.getCPtr(ctx));
    return (cPtr == 0) ? null : new tuple(cPtr, false);
  }

  public static tuple_list dump_tuple_space(tuple_list templates, context ctx) {
    long cPtr = tuplesJNI.dump_tuple_space(tuple_list.getCPtr(templates), context.getCPtr(ctx));
    return (cPtr == 0) ? null : new tuple_list(cPtr, false);
  }

  public static int count_tuple_space(tuple_list templates, context ctx, SWIGTYPE_p_int result) {
    return tuplesJNI.count_tuple_space(tuple_list.getCPtr(templates), context.getCPtr(ctx), SWIGTYPE_p_int.getCPtr(result));
  }

  public static int tuple_server_log(SWIGTYPE_p_FILE stream, context ctx) {
    return tuplesJNI.tuple_server_log(SWIGTYPE_p_FILE.getCPtr(stream), context.getCPtr(ctx));
  }

  public static int tuple_int_field(tuple s, int n) {
    return tuplesJNI.tuple_int_field(tuple.getCPtr(s), n);
  }

  public static double tuple_double_field(tuple s, int n) {
    return tuplesJNI.tuple_double_field(tuple.getCPtr(s), n);
  }

  public static String tuple_string_field(tuple s, SWIGTYPE_p_int len, int n) {
    return tuplesJNI.tuple_string_field(tuple.getCPtr(s), SWIGTYPE_p_int.getCPtr(len), n);
  }

  public static tuple create_tuple(int elt_count) {
    long cPtr = tuplesJNI.create_tuple(elt_count);
    return (cPtr == 0) ? null : new tuple(cPtr, false);
  }

  public static void tuple_set_int(tuple t, int elt_index, int i) {
    tuplesJNI.tuple_set_int(tuple.getCPtr(t), elt_index, i);
  }

  public static void tuple_set_double(tuple t, int elt_index, double d) {
    tuplesJNI.tuple_set_double(tuple.getCPtr(t), elt_index, d);
  }

  public static void tuple_set_str(tuple t, int elt_index, String str, int len) {
    tuplesJNI.tuple_set_str(tuple.getCPtr(t), elt_index, str, len);
  }

  public static void tuple_set_buf(tuple t, int elt_index, SWIGTYPE_p_void buf, int len) {
    tuplesJNI.tuple_set_buf(tuple.getCPtr(t), elt_index, SWIGTYPE_p_void.getCPtr(buf), len);
  }

  public static int tuple_get_int(tuple t, int elt_index) {
    return tuplesJNI.tuple_get_int(tuple.getCPtr(t), elt_index);
  }

  public static double tuple_get_double(tuple t, int elt_index) {
    return tuplesJNI.tuple_get_double(tuple.getCPtr(t), elt_index);
  }

  public static String tuple_get_str(tuple t, int elt_index) {
    return tuplesJNI.tuple_get_str(tuple.getCPtr(t), elt_index);
  }

  public static void tuple_set_nil(tuple t, int elt_index) {
    tuplesJNI.tuple_set_nil(tuple.getCPtr(t), elt_index);
  }

}
